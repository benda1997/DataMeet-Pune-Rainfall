install.packages("shiny")
install.packages("ggplot2")
install.packages("textcat")
install.packages("wordcloud")
install.packages("csv")
library(shiny)
runExample("01_hello")
runExample("01_hello")
#GUI
ui<-fluidPage(
titlePanel("DHCP Log file extractor"),
sidebarLayout(position = "left",
sidebarPanel("Settings"),
mainPanel("No log files selected!")
)
)
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
library(shiny)
runExample("01_hello")
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
install.packages("maps")
install.packages("mapproj")
# Load packages ----
library(shiny)
library(maps)
library(mapproj)
# Load data ----
counties <- readRDS("data/counties.rds")
# Source helper functions -----
source("helpers.R")
# User interface ----
ui <- fluidPage(
titlePanel("censusVis"),
sidebarLayout(
sidebarPanel(
helpText("Create demographic maps with
information from the 2010 US Census."),
selectInput("var",
label = "Choose a variable to display",
choices = c("Percent White", "Percent Black",
"Percent Hispanic", "Percent Asian"),
selected = "Percent White"),
sliderInput("range",
label = "Range of interest:",
min = 0, max = 100, value = c(0, 100))
),
mainPanel(plotOutput("map"))
)
)
# Server logic ----
server <- function(input, output) {
output$map <- renderPlot({
data <- switch(input$var,
"Percent White" = counties$white,
"Percent Black" = counties$black,
"Percent Hispanic" = counties$hispanic,
"Percent Asian" = counties$asian)
color <- switch(input$var,
"Percent White" = "darkgreen",
"Percent Black" = "black",
"Percent Hispanic" = "darkorange",
"Percent Asian" = "darkviolet")
legend <- switch(input$var,
"Percent White" = "% White",
"Percent Black" = "% Black",
"Percent Hispanic" = "% Hispanic",
"Percent Asian" = "% Asian")
percent_map(data, color, legend, input$range[1], input$range[2])
})
}
# Run app ----
shinyApp(ui, server)
runExample("03_reactivity")
runExample("01_hello")
runExample("03_reactivity")
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
library(shiny); runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
library(shiny); runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
library(shiny); runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
runApp('/run/media/ahole/Studies/Intership/Code/DHCP Log File Extractor.R')
#different vectors of different data sets
size<-c("large","small")
city<-c("new york","london","delhi")
amount<-c(23,14,22,16,121,56)
#creating a data frame
data<-data.frame(city=city,size=size,amount=amount)
data
#using spread function
spread_data<-spread(data,size,amount)
#importing needed library
library("tidyr")
install.packages("tidyr")
#importing needed library
library("tidyr")
#different vectors of different data sets
size<-c("large","small")
city<-c("new york","london","delhi")
amount<-c(23,14,22,16,121,56)
#creating a data frame
data<-data.frame(city=city,size=size,amount=amount)
data
#using spread function
spread_data<-spread(data,size,amount)
spread_data
#using gather function
gather(spread_data,"year","amount",2:3)
install.packages("xlsx")
data
#using spread function
spread_data<-spread(data,size,amount)
spread_data
#using gather function
gather(spread_data,"year","amount",2:3)
#using gather function
gather(data,"year","amount",2:3)
#using gather function
gather(data,"year","amount",2:3)
#using spread function
spread_data<-spread(data,size,amount)
spread_data
#using gather function
gather(spread_data,"year","amount",2:3)
#getting inputs from user
sheetindex<-readLines()
#importing the needed libraries
library("xlsx")
library("tidyr")
setwd("Data-Meet-Pune")
setwd("./Processed-Data")
DataFile<-file.choose()
#Same thing goes in a loop now. :p
for(SheetIndex in 3:37){
#Reading the sepcified sheet from the xlsx file.
Data<-read.xlsx( DataFile, sheetIndex = SheetIndex, header=TRUE, stringsAsFactors=FALSE)
#unpivoting the data.
FormattedData<-gather(Data,"Values"=4:15)
Results<-FormattedData[order(FormattedData$Year),]
Results<-data.frame(Results$State,Results$District,Results$Year,Results$key,as.Date(paste(Results$key,"01",Results$Year),format='%B %d %Y'),Results$value)
names(Results)<-c("State","District","Year","Month","Date","Value")
Results<-Results[!is.na(Results$State),]
#Writing the data to a csv file.
OutputFileName<-paste(unique(Results$State),".csv")
OutputFileName
write.table(Results,sep=",",file=OutputFileName,col.names = c("State","District","Year","Month","Date","Value"))
}
